{"version":3,"sources":["Components/Card.js","Components/Tile.js","Models/Player.js","Models/Dice.js","Components/GamePanel.js","Components/Board.js","App.js","serviceWorker.js","index.js"],"names":["TileCard","classes","styles","position","top","margin","backgroundColor","height","react_default","a","createElement","className","this","style","props","idx","React","Component","Tile","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","border","width","player1","background","borderRadius","player2","undefined","hasPlayer1","hasPlayer2","key","Card_TileCard","Player","name","cash","properties","Dice","maxNumber","minNumber","currentNumber","roll","Math","ceil","floor","random","GamePanel","gridRow","gridColumn","players","dice","push","state","isPlayer1","hasBuyOption","hasDiceRoll","currentPlayer","update","bind","assertThisInitialized","endTurn","rollDice","onPlayerMove","e","setState","diceNumber","nextPosition","diceOption","onClick","length","Board","player1pos","player2pos","createBoard","tmpTiles","tiles","size","GamePanel_GamePanel","_this2","tmp","toConsumableArray","Array","keys","map","index","Tile_Tile","text","App","Board_Board","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b7902917.chunk.js","sourcesContent":["import React from 'react';\nexport default class TileCard extends React.Component{\n\n    classes=\"\";\n\n    styles={\n        position:\"relative\",\n        top:\"0\",\n        margin:\"0\",\n        backgroundColor:\"cyan\",\n        height:\"100%\",\n    }\n\n    selectCard(){\n\n    }\n\n\n    render(){\n        return <div className={this.classes} style={this.styles}><p>{this.props.idx}</p></div>    \n    }\n}","import React from 'react'\nimport Card from './Card'\n\nexport default class Tile extends React.Component{\n\n    constructor(props){\n        super(props)\n        if (props.classes !== undefined) {\n            this.classes += \" \" + props.classes\n        }\n\n    }\n\n    styles = {\n        border: '1px solid red ',\n        width:'19vh',\n        height:'19vh',\n    }\n\n    player1 = {\n        position:'relative',\n        top:\"-7em\",\n        background: \"red\",\n        width: \"2em\",\n        height: \"2em\",\n        borderRadius: \"50%\",\n        \n    }\n\n    player2 = {\n        position:'relative',\n        top:\"-5em\",\n        background: \"green\",\n        width: \"2em\",\n        height: \"2em\",\n        borderRadius: \"50%\",\n    }\n\n    classes = \"\"\n    \n    render(){\n        let player1, player2\n        if (this.props.hasPlayer1) {\n            player1 = <div style={this.player1}></div>\n        }\n\n        if (this.props.hasPlayer2) {\n            player2 = <div style={this.player2}></div>\n        }\n        return <div className={this.classes} style={this.styles} key={this.props.idx}>\n            <Card idx={this.props.idx}/>\n            {player1}\n            {player2}\n        </div>\n    }\n}","export default class Player {\n    constructor(name){\n        this.name = name;\n        this.cash = 1000;\n        this.properties = []\n        this.position = 0\n    }\n}","export default class Dice{\n    constructor(){\n        // Max number on the dice (+1)\n        this.maxNumber = 7;\n        // Min number on the dice\n        this.minNumber = 1;\n        this.currentNumber = 0;\n        this.roll();\n    }\n\n    roll(){\n        // This function is based on some stack overflow method that was found on mozilla developer\n        Math.ceil(this.minNumber)\n        Math.floor(this.maxNumber)\n        this.currentNumber = Math.floor(Math.random() * (this.maxNumber - this.minNumber)) + this.minNumber\n        return this.currentNumber\n    }\n}","import React from 'react'\nimport Player from '../Models/Player'\nimport '../../node_modules/bulma/bulma.sass'\nimport Dice from '../Models/Dice'\n\n// This class controls the Game, showing player options in the center of the board\nexport default class GamePanel extends React.Component{\n    constructor(props){\n        // game setup\n        super(props)\n        let players=[];\n        this.dice = new Dice();\n        players.push(new Player(\"fer\"))\n        players.push(new Player(\"nando\"))\n\n        // load the first player to play\n        this.state = { players: players, isPlayer1: true, hasBuyOption: false, hasDiceRoll:true }\n        this.currentPlayer = this.state.players[0]\n        \n        \n        // binding \"this\"  to the function\n        this.update = this.update.bind(this)\n        this.endTurn = this.endTurn.bind(this)\n        this.rollDice = this.rollDice.bind(this)\n        this.onPlayerMove = this.onPlayerMove.bind(this)\n    }\n\n    classes=\"box\"\n    style={\n        width:'100%',\n        height:'100%',\n        gridRow: \"2/span 3\",\n        gridColumn: \"2/span  3\",\n        border:\"solid 3px green\",\n    }\n\n    update(){\n        this.currentPlayer = this.state.isPlayer1?this.state.players[0]:this.state.players[1]\n    }\n\n    endTurn(e){\n        let players = this.state.players\n        if (this.state.isPlayer1) {\n            players[0] = this.currentPlayer\n        }else{\n            players[1] = this.currentPlayer\n        }\n        this.setState({\n            isPlayer1: !this.state.isPlayer1,\n            hasDiceRoll:true,\n            hasBuyOption:false,\n            players: players\n        })\n\n    }\n\n    // Function to roll the dice and return the value\n    rollDice(e){\n        this.dice.roll();\n        this.setState({hasDiceRoll: false})\n        this.onPlayerMove(this.dice.currentNumber)\n    }\n\n    // Sends event to Board\n    onPlayerMove(diceNumber){\n        let nextPosition = this.currentPlayer.position + diceNumber;\n        if (nextPosition > 15) {\n            nextPosition -= 16\n            this.currentPlayer.cash += 500\n        }\n        this.currentPlayer.position = nextPosition        \n        this.props.onPlayerMove({isPlayer1:this.state.isPlayer1, position:this.currentPlayer.position});\n    }\n\n    render(){\n        this.update()\n        let diceOption;\n        // let buyOption;\n\n        // conditional rendering for dice roll\n        if (this.state.hasDiceRoll) {\n            diceOption = <div className=\"columns\">\n                <div className=\"column is-12\"><button className=\"button is-info\" onClick={this.rollDice}>Roll Dice & move</button></div>\n            </div>\n        }else{\n            diceOption = <div className=\"columns\">\n                <div className=\"column is-12\">\n                    <h2 className=\"\" >You rolled: {this.dice.currentNumber}</h2>\n                </div>\n            </div>\n        }\n\n        // conditional rendering for buying properties\n        if (this.state.hasBuyOption && !this.state.hasDiceRoll) {\n            \n        }\n\n        return <div style={this.style} className={this.classes}>\n            <h1 className=\"has-text-centered has-text-info\">{this.currentPlayer.name}'s turn</h1>\n            <div className=\"columns\">\n                <h2 className=\"column is-12\">CA$H: {this.currentPlayer.cash}</h2>\n            </div>\n            <div className=\"columns\">\n                <h2 className=\"column is-12\">Properties: {this.currentPlayer.properties.length}</h2>\n            </div>\n            {/* <div className=\"columns\">\n                <div className=\"column\">DEBUG_OPTIONS</div>\n                <div className=\"column\"><button className=\"button is-danger\" onClick={this.onPlayerMove}>onPlayerMove</button></div>\n\n            </div> */}\n\n            {diceOption}\n\n            <div className=\"\" >\n                <button className=\"button is-success is-fullwidth\" onClick={this.endTurn}>End Turn</button>\n            </div>\n        </div>\n    }\n}","import React from 'react'\nimport Tile from './Tile'\nimport GamePanel from './GamePanel'\nexport default class Board extends React.Component{\n\n\n    constructor(props){\n        super(props)\n        this.state = {player1pos:0,player2pos:0}\n        \n        this.onPlayerMove = this.onPlayerMove.bind(this)\n        this.createBoard = this.createBoard.bind(this)\n    }\n    \n    onPlayerMove(e){\n        const tmpTiles = this.state.tiles\n        if (e.isPlayer1) {\n            this.setState({player1pos:e.position})\n        }else{\n            this.setState({player2pos:e.position})\n        }\n        this.setState({tiles:tmpTiles})\n    }\n    \n    render(){\n        this.createBoard(this.props.size)\n        return <div>\n            <div className=\"grid-container\">\n                {this.createBoard(this.props.size)}\n                <GamePanel className=\"game-panel\" onPlayerMove={this.onPlayerMove}/>\n            </div>\n        </div>\n        \n    }\n    \n    createBoard(size){\n        let tmp = size === undefined?16:size\n        let tilesTmp = [...Array(tmp).keys()].map(\n            index => {\n                return <Tile idx={index} key={index} classes={\"position-\" + index} \n                text={index} hasPlayer1={this.state.player1pos === index} hasPlayer2={this.state.player2pos === index} />\n            }\n        )\n        return tilesTmp\n    }\n}","import React, { Component } from 'react';\n// import '../node_modules/bulma/bulma.sass'\nimport './App.css'\nimport Board  from \"./Components/Board\";\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n      <Board />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}